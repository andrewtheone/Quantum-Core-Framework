<?php$this->view->attach('admin/template', NULL);if( (!$this->router->isGet("op", "login") || !$this->router->isGet("op")) && !$this->router->isGet("op", "no_auth") )    if( !$this->router->isSession("uid") )        $this->router->redirection("admin/op/login");    elseif( !$this->loadClass("user")->hasPermission("admin") )        $this->router->redirection("admin/op/no_auth");if( $this->router->isGet("op", "no_auth") )    $this->view->attach("admin/no_auth");        if( (!$this->router->isGet("op") || $this->router->isGet("op", "login")) )    {    if( $this->router->isSession("uid") )        $this->router->redirection("admin/op/main");    $this->loadHelper("formvalidator");        Formvalidator::setRule('username', '%common.admin.login.username%', 'r_or(email)(%common.admin.login.email%)');    Formvalidator::setRule('password', '%common.admin.login.password%', 'r');    $data->errors = array();    do if( Formvalidator::run() === TRUE )        {        $user = &$this->loadClass("user")->signIn($this->router->post('username'), $this->router->post('email'), $this->router->post('password'));        if( $user === false )            {            $data->errors[] = "%error.login.failed%";            break;            }else            $this->router->redirection("admin/op/main");        } while( false );            $data->errors += Formvalidator::getErrors();    $this->view->attach('admin/login');    }if( $this->router->isGet("op", "main") )    {        $lister = &$this->loadLibrary("lister");        $fg = &$this->loadLibrary("formgenerator");    $fg->setFields( $this->db->users->getFields() );    $fg->setFieldType( 'id', 'simplelist', $this->db->acl->fetch(), 'id', 'name' );    $fg->generate();        $lister->dataSource( $this->db->users->select('*')->useTable('acl')->select(array('id' => 'acl.id'))->leftJoin('acl', 'id', 'acl_group')->fetch() );    $lister->addColumn(0, 'Elore', '<a href="javascript:alert(\'%data.id%\');">a</a>');    $lister->forbidColumn('password');    $lister->forbidColumn(array('acl.id', 'email'));    $lister->overwriteColumn('username', 'kabbe', 'username: %value%');    $lister->generate();        $lister->dataSource( $this->db->settings->fetch() );    $lister->setTemplateTag('{LIST2}');    $lister->generate();        $modules = $this->db->modules->fetch();    while( $module = $modules->Row() )        {        if( (file_exists($info = PUBLIC_DIR."modules/".$module->name."/admin/_info.php")) == FALSE )            if( (file_exists($info = SHARED_PUBLIC_DIR."modules/".$module->name."/admin/_info.php")) == FALSE )                continue 1;        $info = require $info;        $data->modules->{$module->name} = $info;        }    $plugins = $this->db->plugins->where('status!=', 0)->fetch();    while( $plugin = $plugins->Row() )        {        if( (file_exists($info = PUBLIC_DIR."plugins/".$plugin->name."/admin/_info.php")) == FALSE )            if( (file_exists($info = SHARED_PUBLIC_DIR."plugins/".$plugin->name."/admin/_info.php")) == FALSE )                continue 1;        $info = require $info;        $data->plugins->{$plugin->name}->$info;        }    $this->view->attach('admin/main');    }